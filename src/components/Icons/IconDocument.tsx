'use client';

import cn from 'classnames/bind';
import { Tooltip } from 'react-tooltip';

import type { CSSVariables, TIconProps } from '@/types/index.interface';
import styles from './icons.module.css';

const cx = cn.bind(styles);

export default function IconDocument({
  isActive,
  squareSize = 24,
  getClick,
  colors = { default: 'currentColor', active: 'currentColor', hover: 'currentColor' },
  tooltip,
}: TIconProps) {
  const style: React.CSSProperties & CSSVariables = {
    width: squareSize,
    height: squareSize,
    '--color-icon-default': colors.default,
    '--color-icon-active': colors.active,
    '--color-icon-hover': colors.hover,
  };
  return (
    <div
      onClick={getClick}
      className={cx('box', {
        interactive: getClick,
        active: isActive,
      })}
      style={{ ...style, width: squareSize, height: squareSize }}
      id={tooltip?.id}
    >
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M6 0C5.175 0 4.5 0.675 4.5 1.5V22.5C4.5 23.325 5.175 24 6 24H21C21.825 24 22.5 23.325 22.5 22.5V6L16.5 0H6Z"
          fill="#E2E5E7"
        />
        <path d="M18 6H22.5L16.5 0V4.5C16.5 5.325 17.175 6 18 6Z" fill="#B0B7BD" />
        <path d="M22.5 10.5L18 6H22.5V10.5Z" fill="#CAD1D8" />
        <path
          d="M19.5 19.5C19.5 19.9125 19.1625 20.25 18.75 20.25H2.25C1.8375 20.25 1.5 19.9125 1.5 19.5V12C1.5 11.5875 1.8375 11.25 2.25 11.25H18.75C19.1625 11.25 19.5 11.5875 19.5 12V19.5Z"
          fill="#B0B7BD"
        />
        <path
          d="M18.75 20.25H4.5V21H18.75C19.1625 21 19.5 20.6625 19.5 20.25V19.5C19.5 19.9125 19.1625 20.25 18.75 20.25Z"
          fill="#CAD1D8"
        />
        <path
          d="M5.51015 17.9468H4V14.0532H5.54061C5.98307 14.0532 6.36314 14.1312 6.68084 14.2871C6.99999 14.4417 7.24515 14.6641 7.41633 14.9544C7.58751 15.2446 7.6731 15.5919 7.6731 15.9962C7.6731 16.4018 7.58678 16.7503 7.41415 17.0418C7.24297 17.3333 6.99563 17.557 6.67213 17.7129C6.35009 17.8688 5.96276 17.9468 5.51015 17.9468ZM4.8073 17.3365H5.47098C5.78142 17.3365 6.04037 17.2871 6.24781 17.1882C6.45526 17.0881 6.61121 16.9392 6.71565 16.7414C6.8201 16.5425 6.87233 16.294 6.87233 15.9962C6.87233 15.6984 6.8201 15.4512 6.71565 15.2548C6.61121 15.057 6.45671 14.9094 6.25217 14.8118C6.04907 14.7129 5.79666 14.6635 5.49492 14.6635H4.8073V17.3365Z"
          fill="black"
        />
        <path
          d="M12.4222 16C12.4222 16.4195 12.3323 16.7788 12.1524 17.0779C11.974 17.3758 11.7303 17.6039 11.4213 17.7624C11.1137 17.9208 10.7648 18 10.3746 18C9.98438 18 9.63477 17.9208 9.32577 17.7624C9.01823 17.6027 8.77452 17.3739 8.59464 17.076C8.4162 16.7769 8.32699 16.4183 8.32699 16C8.32699 15.5805 8.4162 15.2218 8.59464 14.924C8.77452 14.6248 9.01823 14.3961 9.32577 14.2376C9.63477 14.0792 9.98438 14 10.3746 14C10.7648 14 11.1137 14.0792 11.4213 14.2376C11.7303 14.3961 11.974 14.6248 12.1524 14.924C12.3323 15.2218 12.4222 15.5805 12.4222 16ZM11.6106 16C11.6106 15.7047 11.5576 15.4556 11.4517 15.2529C11.3473 15.0488 11.2022 14.8948 11.0165 14.7909C10.8308 14.6857 10.6169 14.6331 10.3746 14.6331C10.1323 14.6331 9.91837 14.6857 9.73269 14.7909C9.547 14.8948 9.40121 15.0488 9.29531 15.2529C9.19086 15.4556 9.13864 15.7047 9.13864 16C9.13864 16.2953 9.19086 16.545 9.29531 16.749C9.40121 16.9518 9.547 17.1058 9.73269 17.211C9.91837 17.315 10.1323 17.3669 10.3746 17.3669C10.6169 17.3669 10.8308 17.315 11.0165 17.211C11.2022 17.1058 11.3473 16.9518 11.4517 16.749C11.5576 16.545 11.6106 16.2953 11.6106 16Z"
          fill="black"
        />
        <path
          d="M17 15.3669H16.1862C16.163 15.2503 16.1202 15.147 16.0578 15.057C15.9954 14.9658 15.9178 14.8885 15.825 14.8251C15.7321 14.7617 15.6262 14.7142 15.5073 14.6825C15.3898 14.6496 15.2628 14.6331 15.1265 14.6331C14.8842 14.6331 14.6695 14.6863 14.4824 14.7928C14.2952 14.898 14.1487 15.0526 14.0428 15.2567C13.9369 15.4594 13.884 15.7072 13.884 16C13.884 16.2978 13.9369 16.5488 14.0428 16.7529C14.1502 16.9556 14.2967 17.109 14.4824 17.2129C14.6695 17.3156 14.8835 17.3669 15.1243 17.3669C15.2577 17.3669 15.3825 17.3517 15.4986 17.3213C15.6161 17.2896 15.7212 17.2433 15.8141 17.1825C15.9084 17.1217 15.9874 17.0469 16.0513 16.9582C16.1165 16.8695 16.1615 16.7681 16.1862 16.654L17 16.6578C16.9695 16.8428 16.9035 17.0165 16.802 17.1787C16.7019 17.3409 16.5706 17.4842 16.4081 17.6084C16.2457 17.7313 16.0556 17.8276 15.838 17.8973C15.6204 17.9658 15.3789 18 15.1134 18C14.7217 18 14.3721 17.9208 14.0646 17.7624C13.757 17.6039 13.5148 17.3752 13.3378 17.076C13.1608 16.7769 13.0723 16.4183 13.0723 16C13.0723 15.5805 13.1615 15.2218 13.34 14.924C13.5184 14.6248 13.7614 14.3961 14.0689 14.2376C14.3765 14.0792 14.7246 14 15.1134 14C15.3615 14 15.5921 14.0304 15.8054 14.0913C16.0186 14.1521 16.2087 14.2414 16.3755 14.3593C16.5423 14.4759 16.6794 14.6191 16.7868 14.789C16.8956 14.9575 16.9666 15.1502 17 15.3669Z"
          fill="black"
        />
      </svg>

      <Tooltip anchorSelect={`#${tooltip?.id}`} place="top" className={cx('tooltip')}>
        {tooltip && <div dangerouslySetInnerHTML={{ __html: tooltip.text }} />}
      </Tooltip>
    </div>
  );
}
