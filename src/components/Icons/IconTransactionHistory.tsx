'use client';

import cn from 'classnames/bind';
import { Tooltip } from 'react-tooltip';

import type { CSSVariables, TIconProps } from '@/types/index.interface';
import styles from './icons.module.css';

const cx = cn.bind(styles);

export default function IconTransactionHistory({
  isActive,
  squareSize = 24,
  getClick,
  colors = { default: 'currentColor', active: 'currentColor', hover: 'currentColor' },
  tooltip,
}: TIconProps) {
  const style: React.CSSProperties & CSSVariables = {
    width: squareSize,
    height: squareSize,
    '--color-icon-default': colors.default,
    '--color-icon-active': colors.active,
    '--color-icon-hover': colors.hover,
  };
  return (
    <div
      onClick={getClick}
      className={cx('box', {
        interactive: getClick,
        active: isActive,
      })}
      style={{ ...style, width: squareSize, height: squareSize }}
      id={tooltip?.id}
    >
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clipPath="url(#clip0_1331_2)">
          <path
            d="M14.5 13.5H6.5C6.23478 13.5 5.98043 13.3946 5.79289 13.2071C5.60536 13.0196 5.5 12.7652 5.5 12.5C5.5 12.2348 5.60536 11.9804 5.79289 11.7929C5.98043 11.6054 6.23478 11.5 6.5 11.5H14.5C14.7652 11.5 15.0196 11.6054 15.2071 11.7929C15.3946 11.9804 15.5 12.2348 15.5 12.5C15.5 12.7652 15.3946 13.0196 15.2071 13.2071C15.0196 13.3946 14.7652 13.5 14.5 13.5ZM6.5 15.5C6.23478 15.5 5.98043 15.6054 5.79289 15.7929C5.60536 15.9804 5.5 16.2348 5.5 16.5C5.5 16.7652 5.60536 17.0196 5.79289 17.2071C5.98043 17.3946 6.23478 17.5 6.5 17.5H10.5C10.7652 17.5 11.0196 17.3946 11.2071 17.2071C11.3946 17.0196 11.5 16.7652 11.5 16.5C11.5 16.2348 11.3946 15.9804 11.2071 15.7929C11.0196 15.6054 10.7652 15.5 10.5 15.5H6.5ZM18.5 13C18.2348 13 17.9804 13.1054 17.7929 13.2929C17.6054 13.4804 17.5 13.7348 17.5 14V21H3.5V4H8.5C8.76522 4 9.01957 3.89464 9.20711 3.70711C9.39464 3.51957 9.5 3.26522 9.5 3C9.5 2.73478 9.39464 2.48043 9.20711 2.29289C9.01957 2.10536 8.76522 2 8.5 2H2.5C2.23478 2 1.98043 2.10536 1.79289 2.29289C1.60536 2.48043 1.5 2.73478 1.5 3V22C1.5 22.2652 1.60536 22.5196 1.79289 22.7071C1.98043 22.8946 2.23478 23 2.5 23H18.5C18.7652 23 19.0196 22.8946 19.2071 22.7071C19.3946 22.5196 19.5 22.2652 19.5 22V14C19.5 13.7348 19.3946 13.4804 19.2071 13.2929C19.0196 13.1054 18.7652 13 18.5 13ZM22.2 12.7C22.111 12.797 22.0028 12.8744 21.8823 12.9274C21.7618 12.9804 21.6316 13.0077 21.5 13.0077C21.3684 13.0077 21.2382 12.9804 21.1177 12.9274C20.9972 12.8744 20.889 12.797 20.8 12.7L18.25 10.15C17.4316 10.6864 16.4784 10.9811 15.5 11C14.1649 10.9889 12.8885 10.4496 11.95 9.5H6.5C6.23478 9.5 5.98043 9.39464 5.79289 9.20711C5.60536 9.01957 5.5 8.76522 5.5 8.5C5.5 8.23478 5.60536 7.98043 5.79289 7.79289C5.98043 7.60536 6.23478 7.5 6.5 7.5H10.75C10.5899 7.01586 10.5056 6.50989 10.5 6C10.5 4.67392 11.0268 3.40215 11.9645 2.46447C12.9021 1.52678 14.1739 1 15.5 1C16.8261 1 18.0979 1.52678 19.0355 2.46447C19.9732 3.40215 20.5 4.67392 20.5 6C20.496 6.97348 20.2188 7.92629 19.7 8.75H19.65L22.2 11.3C22.297 11.389 22.3744 11.4972 22.4274 11.6177C22.4804 11.7382 22.5077 11.8684 22.5077 12C22.5077 12.1316 22.4804 12.2618 22.4274 12.3823C22.3744 12.5028 22.297 12.611 22.2 12.7ZM13.75 7.5C13.742 7.4324 13.7494 7.36386 13.7716 7.29954C13.7939 7.23522 13.8305 7.17679 13.8787 7.12865C13.9268 7.08052 13.9852 7.04393 14.0495 7.02165C14.1139 6.99936 14.1824 6.99196 14.25 7H16.25V6.5H14.75C14.4848 6.5 14.2304 6.39464 14.0429 6.20711C13.8554 6.01957 13.75 5.76522 13.75 5.5V5C13.75 4.73478 13.8554 4.48043 14.0429 4.29289C14.2304 4.10536 14.4848 4 14.75 4H15V3.05C14.3107 3.17746 13.6877 3.5423 13.2393 4.08119C12.7909 4.62007 12.5454 5.29897 12.5454 6C12.5454 6.70103 12.7909 7.37993 13.2393 7.91881C13.6877 8.4577 14.3107 8.82254 15 8.95V8H14.25C14.1824 8.00804 14.1139 8.00064 14.0495 7.97835C13.9852 7.95607 13.9268 7.91948 13.8787 7.87135C13.8305 7.82321 13.7939 7.76478 13.7716 7.70046C13.7494 7.63614 13.742 7.5676 13.75 7.5ZM18.5 6C18.4981 5.29242 18.2462 4.60829 17.7887 4.06848C17.3312 3.52867 16.6977 3.16793 16 3.05V4H16.75C16.8176 3.99196 16.8861 3.99936 16.9505 4.02165C17.0148 4.04393 17.0732 4.08052 17.1213 4.12865C17.1695 4.17679 17.2061 4.23522 17.2284 4.29954C17.2506 4.36386 17.258 4.4324 17.25 4.5C17.258 4.5676 17.2506 4.63614 17.2284 4.70046C17.2061 4.76478 17.1695 4.82321 17.1213 4.87135C17.0732 4.91948 17.0148 4.95607 16.9505 4.97835C16.8861 5.00064 16.8176 5.00804 16.75 5H14.75V5.5H16.25C16.5152 5.5 16.7696 5.60536 16.9571 5.79289C17.1446 5.98043 17.25 6.23478 17.25 6.5V7C17.25 7.26522 17.1446 7.51957 16.9571 7.70711C16.7696 7.89464 16.5152 8 16.25 8H16V8.95L16.8 8.7L17.1 8.55C17.1 8.54343 17.1013 8.53693 17.1038 8.53087C17.1063 8.5248 17.11 8.51929 17.1146 8.51464C17.1193 8.51 17.1248 8.50632 17.1309 8.50381C17.1369 8.50129 17.1434 8.5 17.15 8.5L17.5 8.25C17.5 8.24343 17.5013 8.23693 17.5038 8.23087C17.5063 8.2248 17.51 8.21929 17.5146 8.21464C17.5193 8.21 17.5248 8.20632 17.5309 8.20381C17.5369 8.20129 17.5434 8.2 17.55 8.2L17.85 7.9L18.1 7.5L18.2 7.3C18.4052 6.89786 18.5082 6.45139 18.5 6Z"
            fill="currentColor"
          />
        </g>
      </svg>

      <Tooltip anchorSelect={`#${tooltip?.id}`} place="top" className={cx('tooltip')}>
        {tooltip && <div dangerouslySetInnerHTML={{ __html: tooltip.text }} />}
      </Tooltip>
    </div>
  );
}
