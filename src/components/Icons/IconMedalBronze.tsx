'use client';

import cn from 'classnames/bind';
import { Tooltip } from 'react-tooltip';

import type { CSSVariables, TIconProps } from '@/types/index.interface';
import styles from './icons.module.css';

const cx = cn.bind(styles);

export default function IconMedalBronze({
  isActive,
  squareSize = 24,
  getClick,
  colors = { default: 'currentColor', active: 'currentColor', hover: 'currentColor' },
  tooltip,
}: TIconProps) {
  const style: React.CSSProperties & CSSVariables = {
    width: squareSize,
    height: squareSize,
    '--color-icon-default': colors.default,
    '--color-icon-active': colors.active,
    '--color-icon-hover': colors.hover,
  };
  return (
    <div
      onClick={getClick}
      className={cx('box', {
        interactive: getClick,
        active: isActive,
      })}
      style={{ ...style, width: squareSize, height: squareSize }}
      id={tooltip?.id}
    >
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M8.39998 0H1.91998L9.11998 14.4H15.6L8.39998 0Z" fill="#2A7726" />
        <path d="M15.6 0H22.08L14.88 14.4H8.40002L15.6 0Z" fill="#318D2C" />
        <path
          d="M12 9.6001C15.9763 9.6001 19.2 12.8243 19.2 16.8001C19.2 20.7764 15.9763 24.0001 12 24.0001C8.02391 24.0001 4.79999 20.7764 4.79999 16.8001C4.79999 12.8238 8.02343 9.6001 12 9.6001Z"
          fill="#CD7F32"
        />
        <path
          d="M12 11.04C8.81879 11.04 6.23999 13.6188 6.23999 16.8C6.23999 19.9812 8.81879 22.56 12 22.56C15.1812 22.56 17.76 19.9812 17.76 16.8C17.76 13.6188 15.1812 11.04 12 11.04ZM12 22.08C9.08423 22.08 6.71999 19.716 6.71999 16.8C6.71999 13.8845 9.08423 11.52 12 11.52C14.916 11.52 17.28 13.8845 17.28 16.8C17.28 19.716 14.916 22.08 12 22.08Z"
          fill="#B5712F"
        />
        <path
          d="M11.1355 16.4178H11.8941C12.1371 16.4178 12.3374 16.3789 12.4951 16.3009C12.6527 16.2199 12.7693 16.1077 12.8448 15.9643C12.9236 15.8177 12.9631 15.6479 12.9631 15.4546C12.9631 15.28 12.9269 15.1257 12.8547 14.9916C12.7857 14.8545 12.679 14.7485 12.5345 14.6737C12.39 14.5957 12.2077 14.5568 11.9877 14.5568C11.8136 14.5568 11.6527 14.5895 11.5049 14.655C11.3571 14.7204 11.2389 14.8124 11.1502 14.9309C11.0616 15.0493 11.0172 15.1927 11.0172 15.3611H9.5936C9.5936 14.987 9.69869 14.6612 9.90887 14.3838C10.1223 14.1063 10.408 13.8897 10.766 13.7338C11.124 13.5779 11.5181 13.5 11.9483 13.5C12.4343 13.5 12.8596 13.5748 13.2241 13.7244C13.5887 13.871 13.8727 14.0876 14.0764 14.3744C14.28 14.6612 14.3818 15.0166 14.3818 15.4405C14.3818 15.6556 14.3292 15.8645 14.2241 16.0671C14.119 16.2666 13.968 16.4475 13.7709 16.6096C13.5772 16.7685 13.3407 16.8963 13.0616 16.993C12.7824 17.0865 12.4688 17.1333 12.1207 17.1333H11.1355V16.4178ZM11.1355 17.4419V16.7452H12.1207C12.5115 16.7452 12.8547 16.7872 13.1502 16.8714C13.4458 16.9556 13.6938 17.0772 13.8941 17.2361C14.0944 17.392 14.2455 17.5775 14.3473 17.7926C14.4491 18.0046 14.5 18.2399 14.5 18.4987C14.5 18.8166 14.436 19.1003 14.3079 19.3497C14.1798 19.596 13.9992 19.8048 13.766 19.9763C13.5361 20.1477 13.2668 20.2787 12.9581 20.3691C12.6494 20.4564 12.3128 20.5 11.9483 20.5C11.6461 20.5 11.3489 20.461 11.0567 20.3831C10.7677 20.302 10.5049 20.182 10.2685 20.023C10.0353 19.8609 9.84811 19.6583 9.7069 19.4152C9.56897 19.1689 9.5 18.8774 9.5 18.5407H10.9236C10.9236 18.7153 10.9696 18.8712 11.0616 19.0084C11.1535 19.1455 11.28 19.2531 11.4409 19.331C11.6051 19.4089 11.7874 19.4479 11.9877 19.4479C12.2143 19.4479 12.408 19.4089 12.569 19.331C12.7332 19.2499 12.858 19.1377 12.9433 18.9943C13.032 18.8478 13.0764 18.6779 13.0764 18.4846C13.0764 18.2352 13.0287 18.0357 12.9335 17.8861C12.8383 17.7334 12.702 17.6211 12.5246 17.5494C12.3473 17.4777 12.1371 17.4419 11.8941 17.4419H11.1355Z"
          fill="#8E5822"
        />
      </svg>

      <Tooltip anchorSelect={`#${tooltip?.id}`} place="top" className={cx('tooltip')}>
        {tooltip && <div dangerouslySetInnerHTML={{ __html: tooltip.text }} />}
      </Tooltip>
    </div>
  );
}
