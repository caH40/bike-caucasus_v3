'use client';

import cn from 'classnames/bind';
import { Tooltip } from 'react-tooltip';

import type { CSSVariables, TIconProps } from '@/types/index.interface';
import styles from './icons.module.css';

const cx = cn.bind(styles);

/**
 * Иконка роли и разрешения для пользователя.
 */
export default function IconRole({
  isActive,
  squareSize = 24,
  getClick,
  colors = { default: 'currentColor', active: 'currentColor', hover: 'currentColor' },
  tooltip,
}: TIconProps) {
  const style: React.CSSProperties & CSSVariables = {
    width: squareSize,
    height: squareSize,
    '--color-icon-default': colors.default,
    '--color-icon-active': colors.active,
    '--color-icon-hover': colors.hover,
  };
  return (
    <div
      onClick={getClick}
      className={cx('box', {
        interactive: getClick,
        active: isActive,
      })}
      style={{ ...style, width: squareSize, height: squareSize }}
      id={tooltip?.id}
    >
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M17 12C16.0111 12 15.0444 12.2932 14.2222 12.8427C13.3999 13.3921 12.759 14.173 12.3806 15.0866C12.0022 16.0002 11.9031 17.0055 12.0961 17.9754C12.289 18.9454 12.7652 19.8363 13.4645 20.5355C14.1637 21.2348 15.0546 21.711 16.0245 21.9039C16.9945 22.0969 17.9998 21.9978 18.9134 21.6194C19.827 21.241 20.6079 20.6001 21.1573 19.7778C21.7068 18.9556 22 17.9889 22 17C21.9931 15.676 21.4641 14.4083 20.5279 13.4721C19.5917 12.5359 18.324 12.0069 17 12ZM17.8772 17.4386C17.7412 17.4353 17.6071 17.4055 17.4825 17.3509L15.5965 19.2368C15.4907 19.3415 15.3503 19.4039 15.2018 19.4123C15.1264 19.4196 15.0505 19.4073 14.9813 19.3765C14.9121 19.3458 14.8521 19.2977 14.807 19.2368C14.7013 19.1239 14.6424 18.9749 14.6424 18.8202C14.6424 18.6654 14.7013 18.5165 14.807 18.4035L16.693 16.5175C16.643 16.3914 16.6134 16.2582 16.6053 16.1228C16.5853 15.9137 16.6088 15.7027 16.6743 15.5031C16.7398 15.3035 16.846 15.1196 16.9861 14.9631C17.1262 14.8065 17.2971 14.6806 17.4882 14.5934C17.6793 14.5062 17.8864 14.4594 18.0965 14.4561C18.2325 14.4595 18.3666 14.4893 18.4912 14.5439C18.5789 14.5439 18.5789 14.6316 18.5351 14.6754L17.6579 15.5088C17.6376 15.519 17.6205 15.5347 17.6086 15.554C17.5967 15.5734 17.5904 15.5957 17.5904 15.6184C17.5904 15.6412 17.5967 15.6634 17.6086 15.6828C17.6205 15.7022 17.6376 15.7178 17.6579 15.7281L18.2281 16.2982C18.2437 16.3183 18.2636 16.3345 18.2864 16.3457C18.3092 16.3568 18.3343 16.3626 18.3597 16.3626C18.385 16.3626 18.4101 16.3568 18.4329 16.3457C18.4557 16.3345 18.4756 16.3183 18.4912 16.2982L19.3246 15.4649C19.3684 15.4211 19.5 15.4211 19.5 15.5088C19.5455 15.6362 19.575 15.7688 19.5877 15.9035C19.5844 16.1193 19.5365 16.3321 19.4471 16.5285C19.3576 16.7249 19.2285 16.9007 19.0679 17.0449C18.9073 17.189 18.7186 17.2984 18.5137 17.3661C18.3088 17.4339 18.0921 17.4586 17.8772 17.4386Z"
          fill="#F1F1F1"
        />
        <path
          d="M10 12C12.7614 12 15 9.76142 15 7C15 4.23858 12.7614 2 10 2C7.23858 2 5 4.23858 5 7C5 9.76142 7.23858 12 10 12Z"
          fill="#F1F1F1"
        />
        <path
          d="M11.4501 21.9541C12.362 21.9541 11.8646 21.2655 11.8646 21.2655C10.9495 20.0029 10.4522 18.4314 10.4554 16.8123C10.451 15.7975 10.6491 14.7942 11.0356 13.8742C11.0531 13.8216 11.0815 13.7744 11.1185 13.7364C11.4087 13.0937 10.8284 13.0478 10.8284 13.0478C10.5674 13.0096 10.3041 12.9943 10.0409 13.0019C8.08948 13.0103 6.20537 13.793 4.73019 15.2079C3.25501 16.6229 2.28641 18.5765 2 20.7146C2 21.1736 2.12434 22 3.40923 22H11.3258C11.4087 21.9541 11.4087 21.9541 11.4501 21.9541Z"
          fill="#F1F1F1"
        />
      </svg>

      <Tooltip anchorSelect={`#${tooltip?.id}`} place="top" className={cx('tooltip')}>
        {tooltip && <div dangerouslySetInnerHTML={{ __html: tooltip.text }} />}
      </Tooltip>
    </div>
  );
}
